swagger: '2.0'
info:
  version: '1.0.3'
  title: Basic Blog API
  description: An application server that returns text through REST using Express JS.
host: localhost:3100
basePath: /api
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /blog:
    post:
      description: Creates a new blog post entry.
      operationId: newEntry
      produces:
        - application/json
      parameters:
        - name: text
          in: body
          description: Text to add for the new entry.
          required: true
          schema:
            $ref: '#/definitions/newEntry'
      responses:
        '200':
          description: entry response
          schema:
            $ref: '#/definitions/entryResponse'
        '400':
          description: missing parameter
          schema:
            $ref: '#/definitions/errorModel'
        '500':
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'

  /blog/{id}:
    patch:
      description: Updates a blost post entry.
      operationId: updateEntry
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: The ID of the entry.
          required: true
          type: string
        - in: formData
          name: text
          description: Text to add for the new entry.
          required: true
          type: string
      responses:
        '204':
          description: On successful update
        '400':
          description: missing parameter
          schema:
            $ref: '#/definitions/errorModel'
        '500':
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
definitions:
  newEntry:
    type: object
    required:
      - username
      - text
    properties:
      username:
        type: string
        description: The username that owns the text.
      text:
        type: string
        description: The text to store.
      displayAll:
        type: boolean
        description: When included, returns all elements from oldest to newest.
  entryResponse:
    type: array
    items:
      $ref: '#/definitions/textEntry'
  textEntry:
    type: object
    required:
      - modified
      - text
    properties:
      id:
        type: string
        description: The unique ID of the posted entry.
      modified:
        type: string
        format: date
        description: The timestamp of when the text was created.
      text:
        type: string
        description: The text that was stored.
      replies:
        type: array
        items:
          type: string
          description: The replies to the text entry.
  errorModel:
    type: object
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
